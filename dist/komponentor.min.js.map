{"version":3,"sources":["komponentor.js"],"names":["$","ERRORS","log","args","komponentor","options","debug","console","async","Komponent","kmp","ready","$el","loading","find","subject","this","addListener","event","listener","listeners","push","Object","assign","data","overlay","html","addClass","css","border","background","position","zIndex","textAlign","clone","width","height","insertBefore","overlayParent","parent","length","tagName","source","fetchKomponent","bind","init_result","renderKomponent","remove","bindKomponent","k","error","text","toString","dummy","appendTo","append","each","_","item","$renderedKomponent","children","initFunc","init_komponent","replace","replaceWith","empty","setTimeout","prev","el","komponent","attr","forEach","e","url","Error","response","fetch","ok","reason","status","statusText","request","loadKomponents","container","promises","Promise","all","window","components","path","fn","opts","tmp","split","shift","para","String","prototype","hashCode","i","chr","hash","charCodeAt","Math","abs","document","autoload","intent","init_data","obj","val","send","sendIntent","then","c","hasOwnProperty","exec","catch","v","finally","$overlay"],"mappings":"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","file":"komponentor.min.js","sourcesContent":["/**\n * Komponentor - A jQuery-based component loading system\n * @module komponentor\n */\n\n\n\n/**\n * @typedef {Object} KomponentOptions\n * @property {jQuery} $el - jQuery element\n * @property {string} url - Component URL\n * @property {Object} data - Component data\n * @property {boolean} [replace] - Whether to replace the element\n */\n\n/**\n * @typedef {Object} RoutingResult\n * @property {string|null} path - Current route path\n * @property {Object} paras - Route parameters\n * @property {Object} params - Alias for paras (deprecated)\n */\n\n(function ($) {\n    const ERRORS = {\n        NO_URL: 'No URL provided',\n        AJAX_FAIL: 'Failed to initiate component due to failed ajax request',\n        LOAD_FAIL: 'Failed to load Komponent'\n    }; \n    \n    // Add logging function near the top of the module\n    const log = (...args) => {\n        if (komponentor.options.debug) {\n            console.log('[Komponentor]', ...args);\n        }\n    };\n    \n    const DEFAULT_OVERLAY_HTML = `\n        <div style='position: absolute; top:50%; transform: translate(-50%, -50%); left:50%'>\n            Se incarca\n        </div>\n    `;\n    const createOverlay = () => {\n        return $(\"<div>\")\n            .html(DEFAULT_OVERLAY_HTML)\n            .addClass(\"komponent-overlay\")\n            .css({\n                border: 'dashed 1px silver',\n                background: '#eee',\n                position: 'absolute',\n                zIndex: 1000000,\n                textAlign: 'center'\n            });\n    };\n\n    window.komponentor = {\n        components: {},\n        path: null,\n        options: {\n            debug: true\n        }\n    };\n\n    // komponentor.routing = () => {\n    //     const hash = window.location.hash;\n    //     const result = {\n    //         path: null,\n    //         paras: {},\n    //         params: {}\n    //     };\n\n    //     if (!hash) return result;\n\n    //     const [path, ...paramPairs] = hash.substr(1).split('|');\n    //     result.path = path;\n        \n    //     paramPairs.forEach(pair => {\n    //         const [key, value] = pair.split('=');\n    //         result.paras[key] = value;\n    //         result.params[key] = value; // Keep for backwards compatibility\n    //     });\n\n    //     return result;\n    // };\n\n    /**\n     *\n     * @param opts\n     * @returns {Promise<unknown>}\n     */\n    $.fn.komponent = function (opts) {\n\n        if(typeof opts===\"undefined\") {\n            opts = {};\n        }\n        if(typeof opts===\"string\") {\n            opts = {url:opts};\n        }\n\n\n        let options = this.data();\n        if(typeof options===\"undefined\") {\n            options = {};\n        }\n        Object.assign(options,opts);\n        options.$el = this;\n        if(!options.url)\n            console.log(\"options.url\",options);\n\n\n        options.data = typeof opts.data===\"undefined\" ? {} : opts.data;\n        let tmp = options.url.split(\"|\");\n        options.url = tmp.shift();\n\n        tmp.forEach((para)=>{\n            let tmp = para.split(\"=\");\n            options.data[tmp[0]] = typeof tmp[1] ===\"undefined\" ? null :  tmp[1];\n        });\n\n        try {\n            return Komponent(options);\n            \n        } catch (error) {\n            log(\"Failed to load Komponent: \",error);\n            options.$el.html(\"<div>Failed to load Komponent <b>\"+ options.url + \"</b></div>\");\n            return;\n        }\n\n    };\n\n    /**\n     * @param options\n     * @returns {Promise<unknown>}\n     * @constructor\n     */\n    async function Komponent(options) {\n        const kmp = {\n            ready: false,\n            $el: null,\n            loading: ()=>{},\n            find: function (subject){\n                return this.$el.find(subject);\n            },\n            addListener: function (event,listener) {\n                this.listeners[event].push(listener);\n            },\n            listeners:{ready:[]}\n        };\n\n        delete options[\"komponent\"];\n\n        Object.assign(kmp,options);\n\n        if(kmp.$el && (kmp.$el.data(\"komponent\") || kmp.$el.data(\"locked\"))) {\n            return options.$el.data(\"komponent\");\n        }\n\n        if(kmp.$el) {\n            kmp.$el.data(\"locked\",true);\n        }\n        const overlay = createOverlay().clone().width($(kmp.$el).width()).height($(kmp.$el).height()).insertBefore(kmp.$el);\n        const overlayParent = overlay.parent()\n        if(overlayParent.length && overlayParent[0].tagName===\"BODY\") {\n            overlay.css(\"width\",\"100%\").css(\"height\",\"100%\")\n        }\n\n        try {\n            const source = await fetchKomponent(kmp);\n\n            try {\n                if(!options.bind || !$(options.bind).data(\"komponent\")) {\n                    log(\"renderKomponent no bind\",kmp);\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    return kmp;\n                }\n\n                const bindKomponent = $(options.bind).data(\"komponent\");\n                if(bindKomponent.ready) {\n                    log(\"renderKomponent bind ready\",kmp);\n                    kmp.data = bindKomponent;\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    return kmp;\n                }\n                log(\"Add listener to\",bindKomponent);\n                \n                kmp.loading();\n                bindKomponent.addListener(\"ready\",(k)=>{\n                    log(\"renderKomponent on bind ready\",kmp);\n                    options.data = k;\n                    Object.assign(kmp,options);\n                    kmp.init_result = renderKomponent(kmp,source);\n                    overlay.remove();\n                    log(\"Component loaded\",kmp);\n                });\n            \n    \n                return kmp;\n            } catch (error) {\n                kmp.init_result = renderKomponent(kmp,source);\n                overlay.remove();\n                console.error(\"Error in Komponent\",error);\n            }\n        } catch (error) {\n            overlay.text(\"Componenta nu a putut fi incarcata: <pre>\"+error.toString()+\"</pre>\");\n            // throw(error);\n            return kmp;\n        }\n        \n    \n\n\n    }\n\n    String.prototype.hashCode = function()\n    {\n        let hash = 0, i, chr;\n        if (this.length === 0) return hash;\n        for (i = 0; i < this.length; i++) {\n            chr   = this.charCodeAt(i);\n            hash  = ((hash << 5) - hash) + chr;\n            hash |= 0; // Convert to 32bit integer\n        }\n        return Math.abs(hash);\n    };\n\n    /**\n     *\n     * @param k\n     * @param html\n     */\n    async function renderKomponent(k,html) {\n        let dummy = $(\"<div>\").appendTo(\"body\").append(html);\n        dummy.find(\"script\").each((_,item)=>{\n            $(item).remove();\n        });\n\n        const $renderedKomponent = dummy.children().remove();\n        dummy.remove();\n\n        let initFunc;\n\n        if(typeof init_komponent===\"function\") {\n            initFunc = init_komponent.bind(k);\n            init_komponent=null;\n            delete init_komponent;\n        } else {\n            initFunc = async function() {};\n        }\n\n        if(k.$el && $renderedKomponent.length) {\n            if(k.replace) {\n                // let id = k.$el.attr(\"id\");\n                k.$el.replaceWith($renderedKomponent);\n                k.$el = $renderedKomponent;\n                // k.$el.attr(\"id\",id);\n\n            }\n            else {\n                k.$el.empty().append($renderedKomponent);\n            }\n        }\n\n        if(!k.$el) {\n            k.$el = $renderedKomponent;\n        }\n\n        setTimeout(()=>k.$el.prev(\".komponent-overlay\").remove(),100);\n\n\n        \n        k.find(\"[is=komponent]\").each((_,el)=>$(el).komponent());\n        k.find(\"komponent\").each((_,el)=>$(el).komponent());\n\n        k.$el.data(\"komponent\",k)\n            .attr(\"is\",\"komponent\")\n            .find(\"*\").data(\"komponent\",k);\n\n\n\n        try {   \n            await initFunc(k,(k.data?k.data:null));\n            k.listeners.ready.forEach(listener => listener(k));\n            k.ready = true;\n        } catch (e) {\n            console.error(\"Error in initKomponent\",e);\n        }\n\n\n    }\n\n    /**\n     *\n     * @returns {Promise<unknown>}\n     * @param opts\n     */\n    async function fetchKomponent(options) {\n        if (!options.url) {\n            throw new Error(ERRORS.NO_URL);\n        }\n        try {\n            const response = await fetch(options.url);\n            if (!response.ok) {\n                throw {\n                    reason: ERRORS.AJAX_FAIL,\n                    status: response.status,\n                    statusText: response.statusText,\n                    request: options\n                };\n            }\n            return await response.text();\n        } catch (error) {\n            throw {\n                reason: ERRORS.AJAX_FAIL,\n                error,\n                request: options\n            };\n        }\n    };\n\n    /**\n     *\n     * @param container\n     * @returns {Promise<unknown[]>}\n     */\n    function loadKomponents(container) {\n\n        let promises = [];\n        $(container).find(\"[is=komponent]\").each(function () {\n            promises.push($(this).komponent());\n        });\n\n        return Promise.all(promises);\n    }\n\n    /**\n     * default behaviour is to autoload komponents\n     */\n    $(document).ready(function () {\n        if(typeof autoload!== \"undefined\" && !autoload) {\n            return;\n        }\n\n        loadKomponents(\"body\");\n    });\n\n\n    /**\n     *\n     * @param url\n     * @param options\n     * @returns {{data: data, options: (function(*): obj), send: (function(): Promise<unknown>), url: (function(*): obj)}}\n     */\n    window.komponentor.intent = function (url) {\n\n        let init_data = {data:{}};\n        let _data = {};\n\n        let obj = {\n            url: function(url) {\n                init_data.url = url;\n                return this;\n            },\n            data: function (attr,val) {\n                if(typeof attr===\"object\") {\n                    Object.assign(init_data.data,attr);\n                    return this;\n                }\n                init_data.data[attr] = val;\n                return this;\n            },\n            send: function (data) {\n                if(data) {\n                    obj.data(data);\n                }\n                // add overlay\n                try {\n                    return Komponent(init_data);\n                } catch (error) {\n                    console.error(\"Error in Komponent\",error);\n                }\n            }\n        };\n\n        if(url) {\n            obj.url(url);\n        }\n\n        return  obj;\n    };\n\n    komponentor.sendIntent = function(options) {\n\n        fetchKomponent(options)\n            .then(  function (c) {\n                if(!c)\n                    return;\n                if(c.hasOwnProperty(\"exec\"))\n                    c.exec(options.data);\n            })\n            .catch(function (v) {\n                console.log(\"could not load\",v,options);\n            })\n            .finally(()=>{\n                $overlay.remove();\n            });\n    };\n\n    komponentor.loadKomponents = function(container) {\n\n        return loadKomponents(container);\n    }\n\n    function cleanupKomponent(k) {\n        if (k.$el) {\n            k.$el.removeData('komponent locked');\n            k.$el.find('*').removeData('komponent');\n        }\n    }\n\n})($);\n"]}